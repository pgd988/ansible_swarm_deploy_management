---
#- include_vars: roles/LB/vars/root_pass.yml

- name: Firewalld disable
  service: name=firewalld state=absent
  when: ansible_distribution == "CentOS"

- name: IPtables install
  package: pkg=iptables state=present

- name: Iptables config deploy
  copy: src=iptables/iptables.rules dest=/etc/iptables.rules
  notify: Iptables reload

- name: HaProxy install
  package: pkg=haproxy state=installed

- name: Remove old templates
  file:
    path: roles/LB/vars/b2.yml
    state: absent
  delegate_to: localhost
  ignore_errors: true
  no_log: True

- name: 'PreBuild backend template'
  vars:
    backends: "{{ groups.linux_servers }}"
  template:
    src: "b2.cfg"
    dest: "roles/LB/vars/b2.yml"
  delegate_to: localhost
  run_once: true

- name: 'Create directory for custom frontend'
  file:
    path: "/etc/haproxy/backends.d"
    state: directory

- include_vars: roles/LB/vars/b2.yml

- name: Build up the backend
  template:
    src: "backend.cfg"
    dest: "/etc/haproxy/backends.d/{{ item.name }}.cfg"
  with_items: "{{ haproxy_backends }}"
  when: haproxy_backends is defined

- name: Haproxy default config deploy
  copy: src=haproxy.cfg dest=/etc/haproxy/backends.d/haproxy.cfg_dist

- name: Build Main Configuration file
  assemble:
    src: "/etc/haproxy/backends.d"
    dest: "/etc/haproxy/haproxy.cfg"
    backup: yes
    validate: "haproxy -c -f %s"
  notify: haproxy reload

- name: Additional App install
  package: pkg={{ item }} state=installed 
  with_items:
    - ca-certificates
    - vim
    - wget
    - curl
    - git
    - rsync
