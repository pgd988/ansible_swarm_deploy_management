---
#### Prepearing to joining
- name: determine swarm status
  shell: docker info 2>&1 | grep Swarm | cut -d ' ' -f2
  register: swarm_status

#- name: DEBUG-99
#  vars:
#    stt: "{{ swarm_status }}"
#  debug:
#    msg: "swarm_status is: {{ stt }} "


- name: Create swarm_managers group
  add_host:
   hostname: "{{ item }}"
   groups: swarm_managers
  with_items: "{{ play_hosts }}"
  when: "'active' in swarm_status.stdout_lines"
  run_once: true

- name: Create new_swarm_hosts
  add_host:
   hostname: "{{ item }}"
   groups: new_swarm_hosts
  with_items: "{{ play_hosts }}" 
  when: "'active' not in swarm_status.stdout_lines"
  run_once: true

#- name: DEBUG-0
#  vars:#
#    mng: "{{ groups.swarm_managers.0 }}"
#  debug:
#    msg: "swarm_managers_t is: {{ mng }} "

- name: Swarm cluster Init
  command: docker swarm init --advertise-addr={{ swarm_iface | default ('eth0') }}:2377
  with_items: swarm_managers[0]
  when: "'swarm_managers' not in groups"
  register: swarm_first_node

- name: retrieve swarm manager token
  shell: docker swarm join-token -q manager
  when: inventory_hostname in groups.swarm_managers.0
  register: swarm_manager_token

- name: Send host in to swarm_managers
  add_host:
    hostname: "{{ play_hosts[0] }}"
    groups: swarm_managers
  when: swarm_first_node is changed


- name: DEBUG
  vars:
    token: "{{ swarm_manager_token.stdout }}"
  debug:
    msg: "token is: {{ token }}"
  when: inventory_hostname in groups.swarm_managers.0


- name: Join manager nodes
  vars:
    token: "{{ hostvars.swarm_manager_token.stdout }}"

  shell: docker swarm join --advertise-addr={{ swarm_iface | default('eth0') }}:2377 --token={{ token }} {{ groups.swarm_managers.0 }}:2377
  when: 
    - new_swarm_hosts is defined
    - inventory_hostname in new_swarm_hosts

